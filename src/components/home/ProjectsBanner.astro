---
import { Image } from "astro:assets";
import badges from "../../collections/techBadges";

import { getCollection } from "astro:content";
const featuredProjects = await getCollection(
  "projectsCollection",
  ({ data }) => {
    return data.featured === true;
  },
);

import projectsBannerImage from "../../assets/images/multi-projects-banner.png";
import TechBadge from "../TechBadge.astro";
---

<section aria-label="Featured Projects">
  <h2 class="font-bold text-7xl pl-5 pb-5 tracking-tight sm:pl-10">Projects</h2>
  <div class="section_projects relative">
    <ul>
      {
        featuredProjects
          .sort((a, b) => a.data.title.localeCompare(b.data.title))
          .map((project) => (
            <li class="scroll-trigger-img relative">
              <Image
                src={project.data.image}
                alt="dev trainer"
                class="scroll-img-bg h-dvh w-dvw object-cover"
              />
              <div class="absolute inset-0 bg-black/80" />
            </li>
          ))
      }
    </ul>
    <div class="absolute inset-0">
      <ul class="w-full h-dvh sticky top-0">
        {
          featuredProjects
            .sort((a, b) => a.data.title.localeCompare(b.data.title))
            .map((project) => {
              return (
                <li
                  class="scroll-item absolute inset-0 flex items-center justify-between px-[5%]"
                  style="clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)"
                >
                  <div class="text-white w-full flex flex-col justify-center gap-10 px-5 md:flex-row sm:px-10 md:items-center">
                    <h3 class="text-5xl tracking-tight font-bold md:flex-1">
                      {project.data.title}
                    </h3>
                    <div class="md:w-[300px] lg:w-[480px]">
                      <p>{project.data.description}</p>
                      <ul
                        class="flex flex-wrap gap-2 mt-4"
                        aria-label="Technologies used"
                      >
                        {badges
                          .filter((badge) =>
                            project.data.techStack.includes(badge.title),
                          )
                          .map((badge) => (
                            <li>
                              <TechBadge
                                title={badge.title}
                                img={badge.img}
                                alt={badge.alt}
                              />
                            </li>
                          ))}
                      </ul>
                    </div>
                    <a
                      aria-label={`Learn more about ${project.data.title} project`}
                      href={`/projects/${project.data.slug}`}
                      class="more-button font-bold text-3xl p-1 w-fit rounded-lg transition-colors hover:bg-neutral-500/30"
                    >
                      More &rarr;
                    </a>
                  </div>
                </li>
              );
            })
        }
      </ul>
    </div>

    <!-- SEE MORE -->
    <div class="h-[700px] z-99 relative text-white">
      <Image
        src={projectsBannerImage}
        alt="projects"
        class="absolute left-0 top-0 w-full h-full object-cover"
      />
      <div
        class="absolute inset-0 bg-black/80 flex items-center justify-center px-5 sm:px-10"
      >
        <a
          class="text-6xl text-center hover:text-white/70 hover:cursor-pointer sm:text-7xl"
          href="/projects">See More Projects</a
        >
      </div>
    </div>
  </div>
</section>

<script>
  import { gsap } from "gsap";

  // More button animation
  document.querySelectorAll(".more-button").forEach((button) => {
    gsap.to(button, {
      y: -8,
      repeat: -1,
      yoyo: true,
      duration: 1,
    });
  });

  // Projects section animations
  document.querySelectorAll(".section_projects").forEach((section) => {
    let triggers = section.querySelectorAll(".scroll-trigger-img");
    let items = section.querySelectorAll(".scroll-item");

    triggers.forEach((trigger, index) => {
      let background = trigger.querySelector(".scroll-img-bg");
      let item = items[index];

      if (index === 0) {
        let tl = gsap.timeline({
          scrollTrigger: {
            trigger: trigger,
            start: "top top",
            end: "bottom top",
            scrub: true,
          },
          defaults: {
            ease: "none",
          },
        });
        tl.fromTo(
          item,
          { clipPath: "polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)" },
          { clipPath: "polygon(0% 0%, 100% 0%, 100% 0%, 0% 0%)" },
        );
      } else if (index === items.length - 1) {
        let tl = gsap.timeline({
          scrollTrigger: {
            trigger: trigger,
            start: "top bottom",
            end: "bottom bottom",
            scrub: true,
          },
          defaults: {
            ease: "none",
          },
        });
        tl.fromTo(
          item,
          { clipPath: "polygon(0% 100%, 100% 100%, 100% 100%, 0% 100%)" },
          { clipPath: "polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)" },
        );
      } else {
        let tl = gsap.timeline({
          scrollTrigger: {
            trigger: trigger,
            start: "top bottom",
            end: "bottom top",
            scrub: true,
          },
          defaults: {
            ease: "none",
          },
        });
        tl.fromTo(
          item,
          { clipPath: "polygon(0% 100%, 100% 100%, 100% 100%, 0% 100%)" },
          { clipPath: "polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)" },
        );
        tl.to(item, { clipPath: "polygon(0% 0%, 100% 0%, 100% 0%, 0% 0%)" });
      }

      let tl2 = gsap.timeline({
        scrollTrigger: {
          trigger: trigger,
          start: "top top",
          end: "bottom top",
          scrub: true,
        },
        defaults: {
          ease: "none",
        },
      });
      tl2.to(background, { yPercent: 50 });
    });
  });
</script>
